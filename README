
## Prepare server
```
# Install Docker and Kubernetes
sudo curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add
echo 'echo "deb http://apt.kubernetes.io/ kubernetes-xenial main" >>/etc/apt/sources.list.d/kubernetes.list' | sudo -s
sudo apt-get update
sudo apt-get install -y \
    apt-transport-https \
    ca-certificates \
    curl \
    software-properties-common \
    build-essential \
    docker.io \
    kubelet \
    kubeadm \
    kubectl
sudo swapoff -a

# Bring up Kubernetes
sudo kubeadm init
mkdir -p $HOME/.kube
sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
sudo chown $(id -u):$(id -g) $HOME/.kube/config
sudo sysctl net.bridge.bridge-nf-call-iptables=1
kubectl apply -f "https://cloud.weave.works/k8s/net?k8s-version=$(kubectl version | base64 | tr -d '\n')&env.IPALLOC_RANGE=7.32.0.0/12"
kubectl taint nodes --all node-role.kubernetes.io/master-


# Set up Go environment
wget https://dl.google.com/go/go1.10.3.linux-$(dpkg --print-architecture).tar.gz
sudo tar -C /usr/local -xzf go1.10.3.linux-$(dpkg --print-architecture).tar.gz
mkdir -p ~/gopath/bin
export PATH=$PATH:/usr/local/go/bin:~/gopath/bin
export GOPATH=~/gopath
curl https://glide.sh/get | sh

# Build Helm and Tiller
cd $GOPATH
mkdir -p src/k8s.io
cd src/k8s.io
git clone https://github.com/kubernetes/helm.git
cd helm
git checkout v2.9.1
sudo apt-get install -y mercurial
make bootstrap build
sudo cp ~/gopath/src/k8s.io/helm/bin/* /usr/local/bin
# Start Tiller
./bin/tiller
```

## Bring up MCORD
```
helm init --client-only
export HELM_HOST=localhost:44134
cd ~
git clone https://github.com/cachengo/cord-helm-charts.git
cd cord-helm-charts

# Bring up MCORD charts
# After each helm install command wait until pods are in the running state
# before proceeding. Use "kubectl get pods -a" to see their current state.
helm dep update xos-core
helm install -n xos-core xos-core



helm dep update xos-profiles/base-openstack
helm install -n base-openstack xos-profiles/base-openstack \
    --set computeNodes.master.name=`hostname` \
    --set vtn-service.sshUser=`whoami`

helm install -n onos-cord -f configs/onos-cord.yaml onos

helm install -n onos-fabric -f configs/onos-fabric.yaml onos

helm dep update xos-profiles/mcord
helm install -n mcord xos-profiles/mcord --set proxySshUser=ubuntu
```

# helm delete all the charts
#Gave myself passwordless sudo
git clone https://git.openstack.org/openstack/openstack-helm-infra.git
git clone https://git.openstack.org/openstack/openstack-helm.git
sudo apt-get install python-pip libffi-dev libssl-dev
sudo pip install --upgrade pip

wget https://download.libsodium.org/libsodium/releases/LATEST.tar.gz
tar -xzf LATEST.tar.gz
cd libsodium-stable/
./configure
make && make check
sudo make install

cd ..
cd openstack-helm
CURRENT_DIR="$(pwd)"
: ${OSH_INFRA_PATH:="../openstack-helm-infra"}
cd ${OSH_INFRA_PATH}


sudo apt-get install ansible
make dev-deploy setup-host
./tools/deployment/developer/common/020-setup-client.sh


sudo chown $(id -u):$(id -g) /etc/kubernetes/admin.conf


docker build --network host --force-rm --tag \"openstackhelm/kubeadm-aio:dev\" --file tools/images/kubeadm-aio/Dockerfile --build-arg KUBE_VERSION=\"v1.10.6\" --build-arg CNI_VERSION=\"v0.6.0\" --build-arg HELM_VERSION=\"v2.9.1\" --build-arg CHARTS=\"calico,flannel,tiller,kube-dns,kubernetes-keystone-webhook\" --build-arg HTTP_PROXY=\"\" --build-arg HTTPS_PROXY=\"\" --build-arg NO_PROXY=\"\"  .